package com.mytech.apartment.portal.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import org.springframework.scheduling.annotation.Async;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;

@Service
public class EmailService {
    private static final Logger logger = LoggerFactory.getLogger(EmailService.class);
    @Autowired
    private JavaMailSender mailSender;

    public void sendVerificationEmail(String to, String verificationLink) {
        try {
            logger.info("[EmailService] B·∫Øt ƒë·∫ßu g·ª≠i email x√°c nh·∫≠n t·ªõi: {}", to);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject("X√°c nh·∫≠n ƒëƒÉng k√Ω t√†i kho·∫£n");
            helper.setText("<p>Ch√†o b·∫°n,</p>"
                + "<p>Vui l√≤ng nh·∫•n v√†o link d∆∞·ªõi ƒë√¢y ƒë·ªÉ x√°c nh·∫≠n email v√† k√≠ch ho·∫°t t√†i kho·∫£n:</p>"
                + "<p><a href='" + verificationLink + "'>X√°c nh·∫≠n t√†i kho·∫£n</a></p>"
                + "<br/><p>N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n, h√£y b·ªè qua email n√†y.</p>", true);
            mailSender.send(message);
            logger.info("[EmailService] G·ª≠i email x√°c nh·∫≠n th√†nh c√¥ng t·ªõi: {}", to);
        } catch (MessagingException e) {
            logger.error("[EmailService] L·ªói khi g·ª≠i email x√°c nh·∫≠n t·ªõi {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Kh√¥ng g·ª≠i ƒë∆∞·ª£c email x√°c nh·∫≠n: " + e.getMessage());
        }
    }

    public void sendOtpEmail(String to, String subject, String content) {
        try {
            logger.info("[EmailService] B·∫Øt ƒë·∫ßu g·ª≠i OTP t·ªõi: {}", to);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(content, true);
            mailSender.send(message);
            logger.info("[EmailService] G·ª≠i OTP th√†nh c√¥ng t·ªõi: {}", to);
        } catch (MessagingException e) {
            logger.error("[EmailService] L·ªói khi g·ª≠i OTP t·ªõi {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Kh√¥ng g·ª≠i ƒë∆∞·ª£c email OTP: " + e.getMessage());
        }
    }

    /**
     * G·ª≠i email HTML t·ªïng qu√°t
     */
    @Async
    public void sendHtmlEmail(String to, String subject, String htmlContent) {
        try {
            logger.info("[EmailService] G·ª≠i email t·ªõi: {} | Subject: {}", to, subject);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true);
            mailSender.send(message);
            logger.info("[EmailService] G·ª≠i email th√†nh c√¥ng t·ªõi: {}", to);
        } catch (MessagingException e) {
            logger.error("[EmailService] L·ªói khi g·ª≠i email t·ªõi {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Kh√¥ng g·ª≠i ƒë∆∞·ª£c email: " + e.getMessage());
        }
    }

    /**
     * G·ª≠i email HTML k√®m file ƒë√≠nh k√®m (PDF, ...)
     */
    @Async
    public void sendHtmlWithAttachment(String to, String subject, String htmlContent, String filename, byte[] data) {
        try {
            logger.info("[EmailService] G·ª≠i email (ƒë√≠nh k√®m) t·ªõi: {} | Subject: {}", to, subject);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true);
            if (data != null && data.length > 0) {
                helper.addAttachment(filename, new org.springframework.core.io.ByteArrayResource(data));
            }
            mailSender.send(message);
            logger.info("[EmailService] G·ª≠i email (ƒë√≠nh k√®m) th√†nh c√¥ng t·ªõi: {}", to);
        } catch (MessagingException e) {
            logger.error("[EmailService] L·ªói khi g·ª≠i email (ƒë√≠nh k√®m) t·ªõi {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Kh√¥ng g·ª≠i ƒë∆∞·ª£c email: " + e.getMessage());
        }
    }

    /**
     * G·ª≠i email m·∫≠t kh·∫©u m·ªõi cho ch·ª©c nƒÉng qu√™n m·∫≠t kh·∫©u
     */
    @Async
    public void sendNewPasswordEmail(String to, String newPassword, String fullName) {
        try {
            logger.info("[EmailService] B·∫Øt ƒë·∫ßu g·ª≠i email m·∫≠t kh·∫©u m·ªõi t·ªõi: {}", to);
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(to);
            helper.setSubject("M·∫≠t kh·∫©u m·ªõi - H·ªá th·ªëng qu·∫£n l√Ω chung c∆∞");
            
            String htmlContent = buildNewPasswordEmailContent(fullName, newPassword);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            logger.info("[EmailService] G·ª≠i email m·∫≠t kh·∫©u m·ªõi th√†nh c√¥ng t·ªõi: {}", to);
        } catch (MessagingException e) {
            logger.error("[EmailService] L·ªói khi g·ª≠i email m·∫≠t kh·∫©u m·ªõi t·ªõi {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Kh√¥ng g·ª≠i ƒë∆∞·ª£c email m·∫≠t kh·∫©u m·ªõi: " + e.getMessage());
        }
    }

    /**
     * X√¢y d·ª±ng n·ªôi dung email m·∫≠t kh·∫©u m·ªõi
     */
    private String buildNewPasswordEmailContent(String fullName, String newPassword) {
        return "<!DOCTYPE html>" +
                "<html lang='vi'>" +
                "<head>" +
                "<meta charset='UTF-8'>" +
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>" +
                "<title>M·∫≠t kh·∫©u m·ªõi</title>" +
                "<style>" +
                "body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; background-color: #f4f4f4; }" +
                ".container { max-width: 600px; margin: 0 auto; background-color: #ffffff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); margin-top: 20px; }" +
                ".header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; border-radius: 10px 10px 0 0; margin: -20px -20px 20px -20px; }" +
                ".header h1 { margin: 0; font-size: 24px; }" +
                ".content { padding: 20px 0; }" +
                ".password-box { background-color: #f8f9fa; border: 2px dashed #dee2e6; border-radius: 8px; padding: 20px; margin: 20px 0; text-align: center; }" +
                ".password { font-size: 24px; font-weight: bold; color: #e74c3c; letter-spacing: 2px; font-family: 'Courier New', monospace; }" +
                ".warning { background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0; color: #856404; }" +
                ".footer { text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; color: #666; font-size: 14px; }" +
                ".btn { display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; margin: 10px 0; }" +
                "</style>" +
                "</head>" +
                "<body>" +
                "<div class='container'>" +
                "<div class='header'>" +
                "<h1>üè¢ H·ªá th·ªëng qu·∫£n l√Ω chung c∆∞</h1>" +
                "</div>" +
                "<div class='content'>" +
                "<h2>Ch√†o " + (fullName != null ? fullName : "b·∫°n") + "!</h2>" +
                "<p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n. D∆∞·ªõi ƒë√¢y l√† m·∫≠t kh·∫©u m·ªõi ƒë·ªÉ b·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng:</p>" +
                "<div class='password-box'>" +
                "<p style='margin: 0 0 10px 0; font-weight: bold;'>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n:</p>" +
                "<div class='password'>" + newPassword + "</div>" +
                "</div>" +
                "<div class='warning'>" +
                "<p><strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong></p>" +
                "<ul style='margin: 10px 0; padding-left: 20px;'>" +
                "<li>Vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u n√†y ngay sau khi ƒëƒÉng nh·∫≠p</li>" +
                "<li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi b·∫•t k·ª≥ ai</li>" +
                "<li>M·∫≠t kh·∫©u n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong th·ªùi gian ng·∫Øn</li>" +
                "</ul>" +
                "</div>" +
                "<p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng li√™n h·ªá v·ªõi qu·∫£n tr·ªã vi√™n ngay l·∫≠p t·ª©c.</p>" +
                "<p style='text-align: center; margin: 30px 0;'>" +
                "<a href='http://localhost:3001/login' class='btn'>ƒêƒÉng nh·∫≠p ngay</a>" +
                "</p>" +
                "</div>" +
                "<div class='footer'>" +
                "<p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng qu·∫£n l√Ω chung c∆∞</p>" +
                "<p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: <strong>support@apartment.com</strong></p>" +
                "<p>¬© 2024 H·ªá th·ªëng qu·∫£n l√Ω chung c∆∞. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>" +
                "</div>" +
                "</div>" +
                "</body>" +
                "</html>";
    }
} 