"use client";

import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Car, Bike, Truck, Van, Zap, Bicycle, Settings } from 'lucide-react';
import VehicleCapacityManager from '@/components/admin/VehicleCapacityManager';
import VehicleCapacityOverview from '@/components/admin/VehicleCapacityOverview';
import VehicleCapacityAlert from '@/components/admin/VehicleCapacityAlert';
import VehicleCapacityDebug from '@/components/admin/VehicleCapacityDebug';
import { useVehicleCapacity } from '@/hooks/use-vehicle-capacity';

const VEHICLE_TYPES = [
  { value: 'CAR_4_SEATS', label: '√î t√¥ 4 ch·ªó', icon: Car },
  { value: 'CAR_7_SEATS', label: '√î t√¥ 7 ch·ªó', icon: Car },
  { value: 'MOTORCYCLE', label: 'Xe m√°y', icon: Bike },
];

const BUILDINGS = [
  { id: 1, name: 'T√≤a A - Golden Tower' },
  { id: 2, name: 'T√≤a B - Golden Tower' },
  { id: 3, name: 'T√≤a C - Golden Tower' },
];

export default function VehicleCapacityDemoPage() {
  const { canRegisterVehicle, getRemainingCapacity, getConfigByBuilding } = useVehicleCapacity();
  const [selectedBuilding, setSelectedBuilding] = useState<number>(1);
  const [selectedVehicleType, setSelectedVehicleType] = useState<string>('car');
  const [showAlert, setShowAlert] = useState(false);

  const handleCheckCapacity = () => {
    setShowAlert(true);
  };

  const config = getConfigByBuilding(selectedBuilding);
  const canRegister = canRegisterVehicle(selectedBuilding, selectedVehicleType);
  const remainingCapacity = getRemainingCapacity(selectedBuilding, selectedVehicleType);

  const getVehicleTypeDisplayName = (type: string) => {
    return VEHICLE_TYPES.find(vt => vt.value === type)?.label || type;
  };

  const getVehicleTypeIcon = (type: string) => {
    const vehicleType = VEHICLE_TYPES.find(vt => vt.value === type);
    if (!vehicleType) return null;
    
    const Icon = vehicleType.icon;
    return <Icon className="h-4 w-4" />;
  };

  return (
    <div className="container mx-auto py-8 space-y-8">
      <div className="text-center">
        <h1 className="text-4xl font-bold tracking-tight mb-4">
          üöó Demo T√≠nh NƒÉng Gi·ªõi H·∫°n Xe
        </h1>
        <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
          Trang demo ƒë·ªÉ test t√≠nh nƒÉng qu·∫£n l√Ω gi·ªõi h·∫°n s·ªë l∆∞·ª£ng xe trong chung c∆∞
        </p>
      </div>

      <Tabs defaultValue="demo" className="space-y-6">
        <TabsList className="grid w-full grid-cols-6">
          <TabsTrigger value="demo">Demo Ki·ªÉm Tra</TabsTrigger>
          <TabsTrigger value="overview">T·ªïng Quan</TabsTrigger>
          <TabsTrigger value="config">C·∫•u H√¨nh</TabsTrigger>
          <TabsTrigger value="debug">Debug API</TabsTrigger>
          <TabsTrigger value="approval">Test Duy·ªát Xe</TabsTrigger>
          <TabsTrigger value="docs">T√†i Li·ªáu</TabsTrigger>
        </TabsList>

        <TabsContent value="demo" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Settings className="h-5 w-5" />
                Ki·ªÉm tra kh·∫£ nƒÉng ƒëƒÉng k√Ω xe
              </CardTitle>
              <CardDescription>
                Ch·ªçn t√≤a nh√† v√† lo·∫°i xe ƒë·ªÉ ki·ªÉm tra gi·ªõi h·∫°n
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="building">T√≤a nh√†</Label>
                  <Select
                    value={selectedBuilding.toString()}
                    onValueChange={(value) => setSelectedBuilding(parseInt(value))}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="Ch·ªçn t√≤a nh√†" />
                    </SelectTrigger>
                    <SelectContent>
                      {BUILDINGS.map(building => (
                        <SelectItem key={building.id} value={building.id.toString()}>
                          {building.name}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="vehicleType">Lo·∫°i xe</Label>
                  <Select
                    value={selectedVehicleType}
                    onValueChange={setSelectedVehicleType}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="Ch·ªçn lo·∫°i xe" />
                    </SelectTrigger>
                    <SelectContent>
                      {VEHICLE_TYPES.map(type => (
                        <SelectItem key={type.value} value={type.value}>
                          <div className="flex items-center gap-2">
                            <type.icon className="h-4 w-4" />
                            {type.label}
                          </div>
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <div className="flex items-center gap-4">
                <Button onClick={handleCheckCapacity} className="flex-1">
                  Ki·ªÉm tra kh·∫£ nƒÉng ƒëƒÉng k√Ω
                </Button>
              </div>

              {showAlert && config && (
                <div className="mt-6">
                  <VehicleCapacityAlert 
                    config={config} 
                    vehicleType={getVehicleTypeDisplayName(selectedVehicleType)}
                    showDetails={true}
                  />
                </div>
              )}

              <div className="grid grid-cols-2 gap-4 mt-6">
                <Card>
                  <CardContent className="pt-6">
                    <div className="text-center">
                      <div className="text-2xl font-bold mb-2">
                        {canRegister ? '‚úÖ C√≥ th·ªÉ' : '‚ùå Kh√¥ng th·ªÉ'}
                      </div>
                      <div className="text-sm text-muted-foreground">
                        {canRegister ? 'ƒêƒÉng k√Ω xe' : 'ƒêƒÉng k√Ω xe'}
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="pt-6">
                    <div className="text-center">
                      <div className="text-2xl font-bold mb-2">
                        {remainingCapacity >= 0 ? remainingCapacity : '‚àû'}
                      </div>
                      <div className="text-sm text-muted-foreground">
                        Ch·ªó c√≤n l·∫°i
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="overview" className="space-y-6">
          <VehicleCapacityOverview />
        </TabsContent>

        <TabsContent value="config" className="space-y-6">
          <VehicleCapacityManager />
        </TabsContent>

        <TabsContent value="debug" className="space-y-6">
          <VehicleCapacityDebug />
        </TabsContent>

        <TabsContent value="approval" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>üöó Test Ch·ª©c NƒÉng Kh√≥a Duy·ªát Xe</CardTitle>
              <CardDescription>
                Test ch·ª©c nƒÉng kh√≥a duy·ªát xe khi danh s√°ch lo·∫°i xe ƒë√≥ ƒë√£ ƒë·∫ßy
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="text-center py-8">
                <p className="text-muted-foreground mb-4">
                  S·ª≠ d·ª•ng trang demo ri√™ng ƒë·ªÉ test ch·ª©c nƒÉng kh√≥a duy·ªát xe
                </p>
                                 <Button asChild>
                   <a href="/vehicle-approval-demo">
                     Demo Duy·ªát Xe
                   </a>
                 </Button>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="docs" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>üìö T√†i li·ªáu t√≠nh nƒÉng gi·ªõi h·∫°n xe</CardTitle>
              <CardDescription>
                H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng v√† API documentation
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="prose max-w-none">
                <h3>üöÄ T√≠nh nƒÉng ch√≠nh</h3>
                <ul>
                  <li><strong>C·∫•u h√¨nh gi·ªõi h·∫°n:</strong> Thi·∫øt l·∫≠p s·ªë l∆∞·ª£ng xe t·ªëi ƒëa cho t·ª´ng lo·∫°i xe trong t·ª´ng t√≤a nh√†</li>
                  <li><strong>Ki·ªÉm tra t·ª± ƒë·ªông:</strong> T·ª± ƒë·ªông ki·ªÉm tra gi·ªõi h·∫°n khi ƒëƒÉng k√Ω xe m·ªõi</li>
                  <li><strong>Qu·∫£n l√Ω linh ho·∫°t:</strong> Admin c√≥ th·ªÉ thay ƒë·ªïi gi·ªõi h·∫°n v√† b·∫≠t/t·∫Øt t√≠nh nƒÉng</li>
                  <li><strong>B√°o c√°o real-time:</strong> Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng xe hi·ªán t·∫°i v√† c√≤n l·∫°i</li>
                </ul>

                <h3>üîß C√°ch s·ª≠ d·ª•ng</h3>
                <ol>
                  <li>V√†o tab "C·∫•u h√¨nh" ƒë·ªÉ thi·∫øt l·∫≠p gi·ªõi h·∫°n xe cho t·ª´ng t√≤a nh√†</li>
                  <li>S·ª≠ d·ª•ng tab "T·ªïng quan" ƒë·ªÉ xem t√¨nh tr·∫°ng s·ª©c ch·ª©a xe</li>
                  <li>D√πng tab "Demo" ƒë·ªÉ test t√≠nh nƒÉng ki·ªÉm tra gi·ªõi h·∫°n</li>
                </ol>

                                 <h3>üìä C√°c lo·∫°i xe ƒë∆∞·ª£c h·ªó tr·ª£</h3>
                 <ul>
                   <li>üöó √î t√¥ (4-7 ch·ªó)</li>
                   <li>üèçÔ∏è Xe m√°y</li>
                 </ul>

                                 <h3>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng</h3>
                 <ul>
                   <li>Ch·ªâ xe c√≥ tr·∫°ng th√°i "APPROVED" m·ªõi ƒë∆∞·ª£c t√≠nh v√†o gi·ªõi h·∫°n</li>
                   <li>Xe c√≥ tr·∫°ng th√°i "PENDING" kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn gi·ªõi h·∫°n</li>
                   <li>Gi·ªõi h·∫°n ƒë∆∞·ª£c ki·ªÉm tra ngay khi ƒëƒÉng k√Ω xe</li>
                   <li>C√≥ th·ªÉ b·∫≠t/t·∫Øt c·∫•u h√¨nh cho t·ª´ng t√≤a nh√†</li>
                   <li><strong>Ch·ª©c nƒÉng kh√≥a duy·ªát:</strong> N√∫t duy·ªát xe s·∫Ω b·ªã kh√≥a khi lo·∫°i xe ƒë√≥ ƒë√£ ƒë·∫ßy</li>
                 </ul>

                 <h3>üîí Ch·ª©c nƒÉng kh√≥a duy·ªát xe</h3>
                 <ul>
                   <li><strong>üü¢ C√≤n ch·ªó:</strong> C√≥ th·ªÉ duy·ªát xe b√¨nh th∆∞·ªùng</li>
                   <li><strong>üü° G·∫ßn ƒë·∫ßy:</strong> Hi·ªÉn th·ªã c·∫£nh b√°o nh∆∞ng v·∫´n c√≥ th·ªÉ duy·ªát</li>
                   <li><strong>üî¥ ƒê√£ ƒë·∫ßy:</strong> N√∫t duy·ªát b·ªã kh√≥a ho√†n to√†n</li>
                 </ul>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}
