package com.mytech.apartment.portal.services;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mytech.apartment.portal.dtos.RoleDto;
import com.mytech.apartment.portal.mappers.RoleMapper;
import com.mytech.apartment.portal.models.Role;
import com.mytech.apartment.portal.repositories.RoleRepository;

@Service
public class RoleService {
    @Autowired
    private RoleRepository roleRepository;

    @Autowired
    private RoleMapper roleMapper;

    public List<RoleDto> getAllRoles() {
        return roleRepository.findAll().stream().map(roleMapper::toDto).collect(Collectors.toList());
    }

    public Optional<RoleDto> getRoleById(Integer id) {
        return roleRepository.findById(id).map(roleMapper::toDto);
    }

    public Optional<RoleDto> getRoleByName(String name) {
        return roleRepository.findByName(name).map(roleMapper::toDto);
    }

    public RoleDto createRole(RoleDto roleDto) {
        Role role = roleMapper.toEntity(roleDto);
        return roleMapper.toDto(roleRepository.save(role));
    }

    public RoleDto updateRole(Integer id, RoleDto roleDetails) {
        return roleRepository.findById(id)
                .map(role -> {
                    role.setName(roleDetails.getName());
                    return roleMapper.toDto(roleRepository.save(role));
                })
                .orElseThrow(() -> new RuntimeException("Role not found with id " + id));
    }

    public void deleteRole(Integer id) {
        roleRepository.deleteById(id);
    }
}